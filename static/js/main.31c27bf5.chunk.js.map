{"version":3,"sources":["components/Circle/index.js","components/Cross/index.js","components/Square/index.js","components/Tictactoe/Result.js","components/Tictactoe/values.js","components/Tictactoe/detectWinner.js","components/Tictactoe/index.js","Main.js","reportWebVitals.js","index.js"],"names":["Circle","Styles","container","alignItems","backgroundColor","borderRadius","display","height","justifyContent","position","verticalAlign","width","inside","style","Cross","side1","left","transform","side2","right","Square","value","takeTurn","disabled","padding","margin","cursor","onClick","Result","winner","border","textAlign","text","fontWeight","button","data-testid","type","window","location","reload","values","Empty","detectWinner","positions","Tictactoe","React","winnerResult","setWinnerResult","player","state","setState","newState","gridTemplateColumns","gridTemplateRows","gap","range","map","o","Main","itemAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31c27bf5.chunk.js","sourcesContent":["// @flow\nimport * as React from 'react';\n\nconst Circle = (): React.Node => {\n  const Styles = {\n    container: {\n      alignItems: 'center',\n      backgroundColor: '#349eeb',\n      borderRadius: '100px',\n      display: 'flex',\n      height: '90%',\n      justifyContent: 'center',\n      position: 'relative',\n      verticalAlign: 'middle',\n      width: '90%',\n    },\n    inside: {\n      backgroundColor: 'white',\n      borderRadius: '100px',\n      height: '80%',\n      position: 'absolute',\n      width: '80%',\n    },\n\n  };\n\n  return (\n    <div style={Styles.container}>\n      <div style={Styles.inside} />\n    </div>\n  );\n};\n\nexport default Circle;\n","// @flow\nimport * as React from 'react';\n\nconst Cross = (): React.Node => {\n  const Styles = {\n    container: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n    },\n    side1: {\n      backgroundColor: 'red',\n      width: '10%',\n      height: '90%',\n      left: '5%',\n      position: 'relative',\n      transform: 'rotate(45deg)',\n    },\n    side2: {\n      backgroundColor: 'red',\n      height: '90%',\n      position: 'relative',\n      right: '5%',\n      transform: 'rotate(135deg)',\n      width: '10%',\n    },\n  };\n\n  return (\n    <>\n      <div style={Styles.side1}> </div>\n      <div style={Styles.side2}> </div>\n    </>\n  );\n};\n\nexport default Cross;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n// @flow\nimport * as React from 'react';\n\nimport Circle from '../Circle';\nimport Cross from '../Cross';\n\ntype Props = {\n    position?: number,\n    takeTurn: any,\n    value?: string,\n    disabled: boolean\n}\n\nconst Square = ({\n  position,\n  value,\n  takeTurn,\n  disabled,\n}: Props): React.Node => {\n  const handleClick = () => {\n    if (disabled) return;\n\n    if (value === 'Empty') {\n      takeTurn(position);\n    }\n  };\n\n  const styles = {\n    container: {\n      width: '200px',\n      height: '200px',\n      backgroundColor: 'white',\n      padding: 0,\n      margin: 0,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n    },\n\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      style={styles.container}\n      onClick={handleClick}\n    >\n      {value === 'Circle' && <Circle /> }\n      {value === 'Cross' && <Cross /> }\n    </div>\n  );\n};\n\nexport default Square;\n","// @flow\n\nimport * as React from 'react';\n\ntype Props = {\n    winner: string\n};\n\nconst Result = ({ winner }: Props):React.Node => {\n  const Styles = {\n    container: {\n      border: 'solid',\n      borderRadius: '20px',\n      textAlign: 'center',\n      padding: '30px',\n      margin: '20px',\n    },\n    text: {\n      padding: '20px',\n      fontWeight: '700',\n    },\n    button: {\n      padding: '20px',\n      fontWeight: '700',\n    },\n  };\n\n  return (\n    <div style={Styles.container} data-testid=\"result\">\n      <div style={Styles.text}>\n        {winner === 'Circle' && 'Circle Wins!'}\n        {winner === 'Cross' && 'Cross Wins!'}\n        {winner === 'Tie' && \"It's a Tie!\"}\n      </div>\n      <button type=\"button\" onClick={() => { window.location.reload(); }} style={Styles.button}> Reset Game</button>\n    </div>\n  );\n};\n\nexport default Result;\n","// @flow\n\nconst values = {\n  Empty: 'Empty',\n  Circle: 'Circle',\n  Cross: 'Cross',\n};\n\nexport default values;\n","// @flow\n\nconst detectWinner = (positions: Array<string>): void | string => {\n  if (positions[0] === 'Circle' && positions[1] === 'Circle' && positions[2] === 'Circle') return 'Circle';\n  if (positions[3] === 'Circle' && positions[4] === 'Circle' && positions[5] === 'Circle') return 'Circle';\n  if (positions[6] === 'Circle' && positions[7] === 'Circle' && positions[8] === 'Circle') return 'Circle';\n\n  if (positions[0] === 'Circle' && positions[3] === 'Circle' && positions[6] === 'Circle') return 'Circle';\n  if (positions[1] === 'Circle' && positions[4] === 'Circle' && positions[5] === 'Circle') return 'Circle';\n  if (positions[2] === 'Circle' && positions[5] === 'Circle' && positions[8] === 'Circle') return 'Circle';\n\n  if (positions[0] === 'Circle' && positions[4] === 'Circle' && positions[8] === 'Circle') return 'Circle';\n  if (positions[2] === 'Circle' && positions[4] === 'Circle' && positions[6] === 'Circle') return 'Circle';\n\n  if (positions[0] === 'Cross' && positions[1] === 'Cross' && positions[2] === 'Cross') return 'Cross';\n  if (positions[3] === 'Cross' && positions[4] === 'Cross' && positions[5] === 'Cross') return 'Cross';\n  if (positions[6] === 'Cross' && positions[7] === 'Cross' && positions[8] === 'Cross') return 'Cross';\n\n  if (positions[0] === 'Cross' && positions[3] === 'Cross' && positions[6] === 'Cross') return 'Cross';\n  if (positions[1] === 'Cross' && positions[4] === 'Cross' && positions[5] === 'Cross') return 'Cross';\n  if (positions[2] === 'Cross' && positions[5] === 'Cross' && positions[8] === 'Cross') return 'Cross';\n\n  if (positions[0] === 'Cross' && positions[4] === 'Cross' && positions[8] === 'Cross') return 'Cross';\n  if (positions[2] === 'Cross' && positions[4] === 'Cross' && positions[6] === 'Cross') return 'Cross';\n\n  if (positions[0] !== 'Empty' && positions[1] !== 'Empty' && positions[2] !== 'Empty'\n    && positions[3] !== 'Empty' && positions[4] !== 'Empty' && positions[5] !== 'Empty'\n    && positions[6] !== 'Empty' && positions[7] !== 'Empty' && positions[8] !== 'Empty'\n  ) return 'Tie';\n\n  return undefined;\n};\n\nexport default detectWinner;\n","// @flow\nimport * as React from 'react';\nimport { range } from 'lodash';\n\nimport Square from '../Square';\nimport Result from './Result';\nimport values from './values';\nimport detectWinner from './detectWinner';\n\nconst Tictactoe = ():React.Node => {\n  const [winnerResult, setWinnerResult] = React.useState();\n\n  const [state, setState] = React.useState({\n    player: values.Circle,\n    positions: [\n      values.Empty, values.Empty, values.Empty,\n      values.Empty, values.Empty, values.Empty,\n      values.Empty, values.Empty, values.Empty,\n    ],\n  });\n\n  React.useEffect(() => {\n    setWinnerResult(detectWinner([...state.positions]));\n  }, [state]);\n\n  const takeTurn = (position) => {\n    const positions = [...state.positions];\n    positions[position] = state.player;\n\n    const newState = {\n      player: state.player === values.Circle ? values.Cross : values.Circle,\n      positions,\n    };\n\n    setState(newState);\n  };\n\n  const styles = {\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'auto auto auto',\n      gridTemplateRows: 'auto auto auto',\n      gap: '10px',\n      backgroundColor: 'lightgrey',\n    },\n  };\n\n  return (\n    <div>\n      <div style={styles.grid}>\n        {range(0, 9).map((o) => (\n          <Square\n            key={o}\n            position={o}\n            value={state.positions[o]}\n            takeTurn={takeTurn}\n            disabled={!!winnerResult}\n          />\n        ))}\n      </div>\n      {winnerResult && <Result winner={winnerResult} />}\n    </div>\n  );\n};\n\nexport default Tictactoe;\n","// @flow\nimport * as React from 'react';\nimport Tictactoe from './components/Tictactoe';\nimport './App.css';\n\nconst Main = (): React.Node => {\n  const Styles = {\n    container: {\n      width: 'auto',\n      height: 'auto',\n      display: 'flex',\n      itemAlign: 'center',\n      justifyContent: 'center',\n    },\n  };\n\n  return (\n    <div style={Styles.container}>\n      <Tictactoe />\n    </div>\n\n  );\n};\n\nexport default Main;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// @flow\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  // $FlowIgnore\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}